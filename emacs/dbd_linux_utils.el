(defun dbd:Linux-p () t)
(setq mydrive "/home/dbdavidson")
(defun explore(mydir) (interactive "D") (shell-command (concat "nautilus " mydir " &")))
(defun docs:eda() (interactive) (shell-command "evince file:///home/dbdavidson/docs/technical/eda/1-eda.pdf&"))

(defun dbd:clean-all() (interactive) (shell-command "clean_all")) 
(defun dbd:think-or-swim() (interactive) (my-shell-command "nohup /home/dbdavidson/install/thinkTDA/thinkTDA > /dev/null 2>&1 &"))
(defun dbd:giggle() (interactive) (my-shell-command "nohup giggle &"))
(defun dbd:gitk() (interactive) (my-shell-command "nohup gitk &" nil))
(defun dbd:gitk-file(file) (interactive "f") (my-shell-command (format "nohup gitk %s &" file) nil))
(defun dbd:meld() (interactive) (my-shell-command (format "cd ~/%s/cpp; nohup meld . >/dev/null &" root) nil))
(defun dbd:plusauri-meld() (interactive) (my-shell-command (format "cd ~/plusauri/; nohup meld . >/dev/null &" root) nil))
(defun dbd:meld-fin() (interactive) (my-shell-command (format "cd ~/%s/data/fin; meld . >/dev/null &" root) nil))
(defun dbd:qtassistant() (interactive) (my-shell-command "nohup assistant&" nil))
(defun dbd:mysql-workbench() (interactive) (my-shell-command "nohup mysql-workbench 2>/dev/null &" nil))
(defun google() (interactive) (my-shell-command "nohup google-chrome 2>/dev/null &" nil))
(defun googlex(url) 
  (interactive "sEnter URL: ") 
  (my-shell-command (format "nohup google-chrome %s 2>/dev/null &" url) nil))
(defun dbd:resume() (interactive)
  (my-shell-command "cd /home/dbdavidson/orgfiles/resume; latex --output-format=pdf dbdavidson.tex")
  (docs:resume))
(defun dbd:cxxflags-save-temps() (interactive) (setenv "CXXFLAGS" "--save-temps"))
(defun dbd:cxxflags-show-headers() (interactive) (setenv "CXXFLAGS" "-H"))
(defun dbd:cxxflags-dump-translation-unit() (interactive) (setenv "CXXFLAGS" "-fdump-translation-unit"))
(defun dbd:cxxflags-dump-class-hierarchy() (interactive) (setenv "CXXFLAGS" "-fdump-class-hierarchy"))
(defun dbd:cxxflags-clear() (interactive) (setenv "CXXFLAGS" ""))
(defun dbd:cxxflags-free-form(arg) (interactive "sEnter flags:") (setenv "CXXFLAGS" arg))

(defun dbd:linkflags-cref() (interactive) (setenv "LINKFLAGS" "-Xlinker --Map=/tmp/linkmap.map -Xlinker --cref"))
(defun dbd:linkflags-clear() (interactive) (setenv "LINKFLAGS" ""))
(defun dbd:linkflags-free-form(arg) (interactive "sEnter flags:") (setenv "LINKFLAGS" arg))

(defun man-stl-regex(arg) (interactive "sEnter regex: ") (manual-entry (concat "-M/home/dbdavidson/man/libstdc++-man-4.4.0/ -a --regex " arg)))
(defun man-stl-namespace() (interactive) (manual-entry "-M/home/dbdavidson/man/libstdc++-man-4.4.0/ Namespace_std"))
(defun man-stl-entry(arg) (interactive "sEnter manpage: ") (manual-entry (concat "-M/home/dbdavidson/man/libstdc++-man-4.4.0/ " arg)))

(defun man-boost-regex(arg) (interactive "sEnter regex: ") (manual-entry (concat "-M/home/dbdavidson/man/boost-doc-man/ -a --regex " arg)))

(defun qt:assistent() (interactive) (my-shell-command "nohup /home/dbdavidson/install/QtSDK/QtCreator/bin/assistant > /dev/null&"))
(defun qt:designer() (interactive) (my-shell-command "nohup /home/dbdavidson/install/QtSDK/QtCreator/bin/designer > /dev/null&"))
(defun qt:creator() (interactive) (my-shell-command "nohup /home/dbdavidson/install/QtSDK/QtCreator/bin/qtcreator > /dev/null&"))
(defun dbd:calibre() (interactive) (my-shell-command "nohup /usr/bin/calibre > /dev/null 2>&1 &"))